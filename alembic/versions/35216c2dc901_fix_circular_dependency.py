"""Fix circular dependency

Revision ID: 35216c2dc901
Revises: 
Create Date: 2025-06-20 22:04:19.779558

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '35216c2dc901'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colleges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('college_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_colleges_college_name'), 'colleges', ['college_name'], unique=True)
    op.create_index(op.f('ix_colleges_id'), 'colleges', ['id'], unique=False)
    op.create_table('universities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_name', sa.String(), nullable=False),
    sa.Column('is_uc', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_universities_id'), 'universities', ['id'], unique=False)
    op.create_index(op.f('ix_universities_university_name'), 'universities', ['university_name'], unique=True)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('units', sa.Float(), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('college_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_code'), 'courses', ['code'], unique=False)
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_table('majors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('major_name', sa.String(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_majors_id'), 'majors', ['id'], unique=False)
    op.create_index(op.f('ix_majors_major_name'), 'majors', ['major_name'], unique=False)
    op.create_table('university_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(), nullable=False),
    sa.Column('course_code', sa.String(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_university_courses_id'), 'university_courses', ['id'], unique=False)
    op.create_table('articulation_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_college_course_id', sa.Integer(), nullable=False),
    sa.Column('university_course_id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('major_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('relationship_type', sa.Enum('AND', 'OR', name='articulationrelationshiptype'), nullable=False),
    sa.ForeignKeyConstraint(['community_college_course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.ForeignKeyConstraint(['university_course_id'], ['university_courses.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_articulation_agreements_id'), 'articulation_agreements', ['id'], unique=False)
    op.create_table('articulation_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('major_id', sa.Integer(), nullable=False),
    sa.Column('college_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('root_expression_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.ForeignKeyConstraint(['root_expression_node_id'], ['expression_nodes.id'], name='fk_articulation_group_root_node', use_alter=True),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_articulation_group_id'), 'articulation_group', ['id'], unique=False)
    op.create_table('course_major_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_course_id', sa.Integer(), nullable=False),
    sa.Column('major_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.ForeignKeyConstraint(['university_course_id'], ['university_courses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_course_id', 'major_id', name='unq_course_major')
    )
    op.create_index(op.f('ix_course_major_mappings_id'), 'course_major_mappings', ['id'], unique=False)
    op.create_table('prerequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_course_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_type', sa.Enum('REQUIRED', 'COREQUISITE', 'RECOMMENDED', name='prerequisitetype'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['prerequisite_course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prerequisites_id'), 'prerequisites', ['id'], unique=False)
    op.create_table('expression_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('parent_node_id', sa.Integer(), nullable=True),
    sa.Column('node_type', sa.Enum('OPERATOR', 'COURSE', name='nodetype'), nullable=False),
    sa.Column('operator_type', sa.Enum('AND', 'OR', name='operatortype'), nullable=True),
    sa.Column('university_course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['articulation_group.id'], ),
    sa.ForeignKeyConstraint(['parent_node_id'], ['expression_nodes.id'], ),
    sa.ForeignKeyConstraint(['university_course_id'], ['university_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expression_nodes_id'), 'expression_nodes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_expression_nodes_id'), table_name='expression_nodes')
    op.drop_table('expression_nodes')
    op.drop_index(op.f('ix_prerequisites_id'), table_name='prerequisites')
    op.drop_table('prerequisites')
    op.drop_index(op.f('ix_course_major_mappings_id'), table_name='course_major_mappings')
    op.drop_table('course_major_mappings')
    op.drop_index(op.f('ix_articulation_group_id'), table_name='articulation_group')
    op.drop_table('articulation_group')
    op.drop_index(op.f('ix_articulation_agreements_id'), table_name='articulation_agreements')
    op.drop_table('articulation_agreements')
    op.drop_index(op.f('ix_university_courses_id'), table_name='university_courses')
    op.drop_table('university_courses')
    op.drop_index(op.f('ix_majors_major_name'), table_name='majors')
    op.drop_index(op.f('ix_majors_id'), table_name='majors')
    op.drop_table('majors')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_code'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_universities_university_name'), table_name='universities')
    op.drop_index(op.f('ix_universities_id'), table_name='universities')
    op.drop_table('universities')
    op.drop_index(op.f('ix_colleges_id'), table_name='colleges')
    op.drop_index(op.f('ix_colleges_college_name'), table_name='colleges')
    op.drop_table('colleges')
    # ### end Alembic commands ###
